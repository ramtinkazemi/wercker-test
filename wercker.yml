box:
  id: quay.io/cashrewards/php-base-ms
  username: $QUAYIO_USERNAME
  password: $QUAYIO_PASSWORD
  tag: master
  registry: https://quay.io

build:
  steps:
    - script:
        name: update dependencies
        code: |
          ls -al $WERCKER_SOURCE_DIR
          ls -al $WERCKER_OUTPUT_DIR


push-to-quayio:
  steps:
    - script:
        name: test
        code: |
          pwd
          ls -al $WERCKER_SOURCE_DIR
    #####################################
    # Ref from https://github.com/Microsoft/msphpsql/wiki/Dockerfile-for-adding-pdo_sqlsrv-and-sqlsrv-to-official-php-image
    #           https://blogs.msdn.microsoft.com/sqlnativeclient/2017/06/30/servicing-update-for-odbc-driver-13-1-for-linux-and-macos-released/
    #           https://github.com/merorafael/docker-php-fpm/blob/master/7.1/Dockerfile
    #####################################
    - script:
        name: install mssql extension
        code: |
          # Add Microsoft repo for Microsoft ODBC Driver 13 for Linux
          apt-get update -yqq && apt-get install -y apt-transport-https
          curl https://packages.microsoft.com/keys/microsoft.asc | apt-key add -
          curl https://packages.microsoft.com/config/debian/8/prod.list > /etc/apt/sources.list.d/mssql-release.list
          apt-get update -yqq

          # Install Dependencies
          ACCEPT_EULA=Y apt-get install -y unixodbc unixodbc-dev libgss3 odbcinst msodbcsql locales
          echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && locale-gen

          # Install pdo_sqlsrv and sqlsrv from PECL. Replace pdo_sqlsrv-4.1.8preview with preferred version.
          pecl install pdo_sqlsrv-4.1.8preview sqlsrv-4.1.8preview
          docker-php-ext-enable pdo_sqlsrv sqlsrv

    - script:
        name: copy source code
        code: |
           cp -Rp $WERCKER_SOURCE_DIR/src/* /var/www/html
    - script:
        name: update dependencies
        code: |
          export COMPOSER_ALLOW_SUPERUSER=1
          composer update --no-interaction -d=/var/www/html
    - script:
        name: set permission
        code: |
           chown -R :www-data /var/www/html
           chmod -R ug+rwx /var/www/html/storage /var/www/html/bootstrap/cache

    - internal/docker-push:
        username: $QUAYIO_USERNAME
        password: $QUAYIO_PASSWORD
        repository: quay.io/cashrewards/crutils-metrics
        registry: https://quay.io
        tag: $WERCKER_GIT_BRANCH
        working-dir: /var/www/html
        cmd: /run.sh
        disable-sync: false
        volumes: /etc/nginx/conf.d/,/var/www/html/

  after-steps:
      - install-packages:
          packages: curl
      - slack-notifier:
          url: $SLACK_WEBHOOK_URL
          channel: releases
          username: wercker

#      - install-packages:
#          packages: ruby
#      - wantedly/pretty-slack-notify:
#          webhook_url: $SLACK_WEBHOOK_URL
#          channel: releases
#          username: wercker

#####
#
#   Register Task Definition 
#
# For your Local test :
#   wercker --environment ./wercker/.env.wercker.deploy deploy --pipeline deploy-to-ecs-task-definition
#
deploy-to-ecs-task-definition:
  box: quay.io/steven_rho/aws-cli
  #box: python:3-slim
  steps:
    ### Task definition for sending metrics to geckoboard
    - steven-rho/aws-ecs-task-definition@0.0.1:
        name: Setup Task Definition (crutils-metrics)
        key: $STEP_AWS_ACCESS_KEY_ID
        secret: $STEP_AWS_SECRET_ACCESS_KEY
        region: $STEP_AWS_DEFAULT_REGION
        task-definition-name: crutils-metrics
        container-memory: 512
        container_command: null
        task_definition_template: wercker/task_definition/task_definition.json.template
    ### Task definition for sending metrics to geckoboard
    - steven-rho/aws-ecs-task-definition@0.0.1:
        name: Setup Task Definition (crutils-geckoboard)
        key: $STEP_AWS_ACCESS_KEY_ID
        secret: $STEP_AWS_SECRET_ACCESS_KEY
        region: $STEP_AWS_DEFAULT_REGION
        task-definition-name: crutils-metrics-geckoboard
        container-memory: 512
        container_command: "[\"/usr/local/bin/php\",\"/var/www/html/artisan\", \"crutils:geckoboard:update\"]"
        task_definition_template: wercker/task_definition/task_definition.json.nonginx.template

  after-steps:
      - install-packages:
          packages: curl
      - slack-notifier:
          url: $SLACK_WEBHOOK_URL
          channel: releases
          username: wercker

#      - install-packages:
#          packages: ruby
#      - wantedly/pretty-slack-notify:
#          webhook_url: $SLACK_WEBHOOK_URL
#          channel: releases
#          username: wercker

#####
#
#   Register Service
#
# For your Local test :
#   wercker --environment ./wercker/.env.wercker.deploy deploy --pipeline deploy-to-ecs-service
#
deploy-to-ecs-service:
  box: quay.io/steven_rho/aws-cli
  steps:
    - steven-rho/aws-ecs-service:
        name: Setup Service (crutils-metrics)
        key: $STEP_AWS_ACCESS_KEY_ID
        secret: $STEP_AWS_SECRET_ACCESS_KEY
        region: $STEP_AWS_DEFAULT_REGION
        cluster-name: $STEP_CLUSTER
        service-name: svc-crutils-metrics
        task-definition-name: crutils-metrics
        desired-count: 1
        service-template: wercker/service/service.json.template

  after-steps:
      - install-packages:
          packages: curl
      - slack-notifier:
          url: $SLACK_WEBHOOK_URL
          channel: releases
          username: wercker

#      - install-packages:
#          packages: ruby
#      - wantedly/pretty-slack-notify:
#          webhook_url: $SLACK_WEBHOOK_URL
#          channel: releases
#          username: wercker

deploy-to-ecs-scheduled-task:
  box: quay.io/steven_rho/aws-cli
  steps:

    #####
    # Scheduled task: every 10 minutes
    #####
    - steven-rho/aws-ecs-scheduled-task@0.0.4:
       name: daily-every-10-minutes
       key: $STEP_AWS_ACCESS_KEY_ID
       secret: $STEP_AWS_SECRET_ACCESS_KEY
       region: $STEP_AWS_DEFAULT_REGION
       schedule-rule-name: daily-every-10-minutes
       schedule-expression: "cron(*/10 * * * ? *)"
       schedule-state: $STEP_SCHEDULE_STATE
       schedule-description: "Tasks that need to run every 10 minutes like geckoboard dataset"
       cluster-name: ${STEP_CLUSTER}
       task-count: 1
       task-definition-name: crutils-metrics-geckoboard
       target-id: crutils-metrics-geckoboard
       target-template: wercker/scheduled_task/ecs_task_target.json.template